<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.reborn.web.dao.community.BoardDao">
     
	<select id="getViewList" resultType="com.reborn.web.entity.community.BoardView">
	  SELECT * FROM BoardView
      <if test="param3 != null and param3 != ''">
         where BINARY ${param3} like '%${param4}%'
      </if>      
      <if test="param5 != null and param5 != ''">
      	AND BINARY category = '%${param5}%' 
      </if>
      order by regdate desc
      limit #{param2} offset #{param1}
	</select>
	
 <select id="getList">
 	SELECT * FROM Board
 	  <if test="param3 != null and param3 != ''">
         where BINARY ${param3} like '%${param4}%'
      </if>
      order by regdate desc
      limit #{param2} offset #{param1}
   </select>
 
<!-- 전체 로우 데이터 --> 
 <select id="getCount" resultType="int">
      SELECT count(id) FROM BoardView
      <if test="param1 != null and param1 != ''">
         where BINARY ${param1} like '%${param2}%'
      </if>
   </select> 
  <!-- detail 에서 사용할 쿼리: id 값 가져오기 -->
  <select id="get" resultType="com.reborn.web.entity.community.BoardView">
  		SELECT * FROM BoardView
  		where id=${id}
  </select>   
   
   <!-- 글 삭제 -->
   <delete id="delete">
   		DELETE FROM Board WHERE id=#{id}   
   </delete>
   
   <!-- 글 등록 -->
   <insert id="insert" parameterType="com.reborn.web.entity.community.Board" >
   		INSERT INTO Board(title, content, boardCategoryId, memberId, files) 
   		values(#{title}, #{content}, #{boardCategoryId}, #{memberId}, #{files})
   </insert>
<!--    <insert id="insert" parameterType="com.reborn.web.entity.community.BoardCategory" >
   		INSERT INTO BoardCategory(name) values(#{name})
   </insert> -->
   
   <!-- 글 수정 -->
   <update id="update">
   	UPDATE Board
   	SET
   		title = #{title},
   		content = #{content},
   		boardCategoryId = #{boardCategoryId},
   		files = #{files}
   	WHERE id = #{id}   		
   </update> 
   
   <select id="getLast" resultType="com.reborn.web.entity.community.Board">
   		SELECT * FROM Board 
			WHERE id = (SELECT MAX(id) FROM Board);
   </select>
   
   
</mapper> 